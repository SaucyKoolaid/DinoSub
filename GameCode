var stage = 0
var score = 0


var m1x,m2x,m3x
var m1d,m2d,m3d
var meteorSpeed = 5
var meteorMajor = 1


const baseY = 400;
var dinoY = 400
var jumpDebounce = false;
var jumpStage = 0
var dimensionID = 1

function setup() {
	createCanvas(1000,500);
	background(100);
	rectMode(CENTER);
	m1d = Math.floor(random(0,3))
	m2d = Math.floor(random(0,3))
	m3d = Math.floor(random(0,3))
	m1x = random(1000,1250)
	m2x = random(4500,5000)
	m3x = random(9500,11000)
}

function draw() {
	clear()
	if(stage==1){
		score+=1 //up score


		//dimension changing along with dimension id
		if(dimensionID==0){
			fill(0,0,255)
		}if(dimensionID==1){
			fill(0,255,0)
		}if(dimensionID==2){
			fill(255,0,0)
		}
		rect(500,250,1000,1000);

		//draw sprites and test sprites

		if(m1d == dimensionID){
			meteorSprite(m1x,400)
		}if(m1d!=dimensionID){
			if(m1d==0){
				blueMeteorSprite(m1x,400)
			}
			if(m1d==1){
				greenMeteorSprite(m1x,400)
			}
			if(m1d==2){
				redMeteorSprite(m1x,400)
			}
		}
		if(m2d == dimensionID){
			meteorSprite(m2x,400)
		}if(m2d!=dimensionID){
			if(m2d==0){
				blueMeteorSprite(m2x,400)
			}
			if(m2d==1){
				greenMeteorSprite(m2x,400)
			}
			if(m2d==2){
				redMeteorSprite(m2x,400)
			}
		}
		if(m3d == dimensionID){
			meteorSprite(m3x,400)
		}if(m3d!=dimensionID){
			if(m3d==0){
				blueMeteorSprite(m3x,400)
			}
			if(m3d==1){
				greenMeteorSprite(m3x,400)
			}
			if(m3d==2){
				redMeteorSprite(m3x,400)
			}
		}

		dinoSprite(150,dinoY)

		//dino jump
		if(jumpDebounce){
			jumpStage+=1
			if(jumpStage<=25){
				dinoY-=5
			}else{
				dinoY+=5
			}
			if(jumpStage==50){
				jumpDebounce=false
				jumpStage=0;
			}
		}

		//allow meteors to glide
		m1x-=meteorSpeed
		m2x-=meteorSpeed
		m3x-=meteorSpeed

		//meteors respawn at right side of screen

		if(m1x<=0){
			m1x=random(1000,1250)
			m1d = Math.floor(random(0,3))
		}	if(m2x<=0){
			m2x=random(1000,1250)
			m2d = Math.floor(random(0,3))
		} if(m3x<=0){
			m3x=random(1000,1250)
			m3d = Math.floor(random(0,3))
		}

		// normal meteors kill dino
		if(m1d==dimensionID){
			if(m1x<175&&m1x>125){
				if(dinoY<425&&dinoY>375){
					stage=2
				}
			}
		}
		if(m2d==dimensionID){
			if(m2x<175&&m2x>125){
				if(dinoY<425&&dinoY>375){
					stage=2
				}
			}
		}
		if(m3d==dimensionID){
			if(m3x<175&&m3x>125){
				if(dinoY<425&&dinoY>375){
					stage=2
				}
			}
		}
		//displayScore
		fill(0)
		textSize(25)
		text(score,100,100)
		
		//speed up meteors when point limit hit
		
		if(score/1000==meteorMajor){
			meteorSpeed+=1
			meteorMajor+=1
		}
	}
	if(stage==2){
		fill(0)
		rect(500,250,1000,1000)
		fill(255)
		textSize(75)
		text("Game Over",300,250)
		textSize(37.5)
		text("Score: "+str(score),400,400)
		textSize(15)
		text("Press s to restart!", 425 ,450)
	}
	if(stage==0){
		fill(0)
		rect(500,250,1000,1000)
		fill(255)
		textSize(75)
		text("Dino Sub!",300,250)
		textSize(37.5)
		text("Press s to start!",350,400)
	}
}

function dinoSprite(x,y){ //150, dinoY
	stroke(0)
	fill(127.5);
	rect(x-20,y+10,20,10); //tail
	rect(x,y,40,40); //torso
	rect(x+30,y-30,40,40); //head
	rect(x-15,y+25,10,15);
	rect(x,y+25,10,15);
	rect(x+25,y,15,10);
	fill(255);
	rect(x+35,y-30,10,10)
}

function meteorSprite(x,y){
	fill(255,127.5,0)                                                 
	stroke(255,127.5,0)
	circle(x,y,65)
	rect(x+40,y,75,50)
	rect(x+75,y,75,30)
	fill(50,0,0);
	circle(x,y,50)
}
function blueMeteorSprite(x,y){
	fill(0,0,255)                                                 
	stroke(0,0,255)
	circle(x,y,65)
	rect(x+40,y,75,50)
	rect(x+75,y,75,30)
	circle(x,y,50)
}
function greenMeteorSprite(x,y){
	fill(0,255,0)                                                 
	stroke(0,255,0)
	circle(x,y,65)
	rect(x+40,y,75,50)
	rect(x+75,y,75,30)
	circle(x,y,50)
}
function redMeteorSprite(x,y){
	fill(255,0,0)                                                 
	stroke(255,0,0)
	circle(x,y,65)
	rect(x+40,y,75,50)
	rect(x+75,y,75,30)
	circle(x,y,50)
}

function clearVariables(){
 	score = 0
	m1x = 1000
	m2x = 4456
	m3x = 9827
	meteorSpeed = 5
	meteorMajor = 1
	dinoY = 400
	jumpDebounce = false;
	jumpStage = 0
	dimensionID = 1
	setup()
}

function keyPressed(){
	if(key=="w"&&jumpDebounce==false){
		jumpDebounce = true;
	}
	if(key=="a"&&dimensionID>0){
		dimensionID-=1
	}
	if(key=="d"&&dimensionID<2){
		dimensionID+=1
	}
	if(key=="s"){
		if(stage==2||stage==0){
			clearVariables()
			stage = 1
		}
	}
}

